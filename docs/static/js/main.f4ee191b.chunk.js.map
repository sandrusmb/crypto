{"version":3,"sources":["components/Form.js","components/Companies.js","components/App.js","index.js"],"names":["Form","props","onSubmit","getData","className","type","required","placeholder","min","pattern","name","id","value","Companies","info","companies","spinner","loading","number","amount","currency","companiesKeys","Object","keys","companiesValues","values","map","companyKey","companyValue","Math","max","App","state","ev","preventDefault","target","elements","console","log","setState","fetch","then","response","json","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAmBeA,G,YAhBF,SAACC,GAEV,OAEI,0BAAMC,SAAUD,EAAME,QAASC,UAAU,QACrC,2BAAOC,KAAK,SAASC,UAAQ,EAACF,UAAU,aAAaG,YAAY,WAAWC,IAAI,IAAIC,QAAQ,YAC5F,4BAAQC,KAAK,WAAWC,GAAG,WAAWP,UAAU,eAC5C,4BAAQQ,MAAM,MAAMR,UAAU,gCAA9B,gBACA,4BAAQQ,MAAM,MAAMR,UAAU,sBAA9B,gBAFJ,YAIA,4BAAQA,UAAU,YAAlB,gB,OCgEGS,G,MA1EG,SAACZ,GAEf,IAAMa,EAAOb,EAAMc,UACbC,EAAUf,EAAMgB,QAChBC,EAASjB,EAAMkB,OACfT,EAAOT,EAAMmB,SACbC,EAAgBC,OAAOC,KAAKT,GAC5BU,EAAkBF,OAAOG,OAAOX,GAEtC,OAAgB,IAAZE,EACQ,yBAAKZ,UAAU,WAKnB,yBAAKA,UAAU,gBAEX,yBAAKA,UAAU,qBACViB,EAAcK,KAAI,SAAAC,GACf,OACI,6BACI,2BAAIA,GACJ,kCAMhB,yBAAKvB,UAAU,uBACVoB,EAAgBE,KAAI,SAAAE,GAEjB,MAAa,QAATlB,EACIkB,GAAgBC,KAAKC,IAAL,MAAAD,KAAI,YAAQL,IAGxB,yBAAKpB,UAAU,SACX,2BAAIwB,EAAeV,GACnB,8BAMJ,6BACI,2BAAIU,EAAeV,GACnB,8BAMRU,GAAgBC,KAAKrB,IAAL,MAAAqB,KAAI,YAAQL,IAExB,6BACI,uBAAGpB,UAAU,SAAUc,EAASA,EAAUU,GAC1C,8BAKJ,6BACI,2BAAKV,EAASA,EAAUU,GACxB,qCCbzBG,E,4MA9CbC,MAAQ,CACNjB,UAAW,GACXI,OAAQ,EACRC,SAAU,MACVH,QAAS,G,EAGXd,QAAU,SAAC8B,GACTA,EAAGC,iBACH,IAAMf,EAASc,EAAGE,OAAOC,SAAS,GAC5BhB,EAAWa,EAAGE,OAAOC,SAAS,GACpCC,QAAQC,IAAIlB,GACZ,EAAKmB,SAAS,CACZtB,QAAS,IAEXuB,MAAM,6CACHC,MAAK,SAAAC,GACJ,OAAQA,EAASC,UAElBF,MAAK,SAAAC,GACJL,QAAQC,IAAI,EAAKN,MAAMb,QACvB,EAAKoB,SAAS,CACZxB,UAAW2B,EACXvB,OAAQA,EAAOP,MACfQ,SAAUA,EAASR,MACnBK,QAAS,Q,uDASf,OACE,6BACE,4BAAQb,UAAU,UAChB,wBAAIA,UAAU,aAAd,cAEF,kBAAC,EAAD,CAAMD,QAASyC,KAAKzC,UACpB,kBAAC,EAAD,CAAWY,UAAW6B,KAAKZ,MAAMjB,UAAWE,QAAS2B,KAAKZ,MAAMf,QAASE,OAAQyB,KAAKZ,MAAMb,OAAQC,SAAUwB,KAAKZ,MAAMZ,gB,GAzC/GyB,IAAMC,WCAxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f4ee191b.chunk.js","sourcesContent":["import React from 'react';\nimport \".././stylesheets/form.scss\";\n\nconst Form = (props) => {\n\n    return (\n\n        <form onSubmit={props.getData} className=\"form\">\n            <input type=\"number\" required className=\"form-input\" placeholder=\"Cantidad\" min=\"1\" pattern=\"^[0-9]+\"></input>\n            <select name=\"currency\" id=\"currency\" className=\"form-select\">\n                <option value=\"BTC\" className=\"container_form-select-option\">De BTC a LTC</option>\n                <option value=\"LTC\" className=\"form-select-option\">De LTC a BTC</option>/option>\n                </select>\n            <button className=\"form-btn\">Convertir</button>\n        </form>\n\n    )\n}\n\nexport default Form;","import React from 'react';\nimport \".././stylesheets/companies.scss\";\n\nconst Companies = (props) => {\n\n    const info = props.companies;\n    const spinner = props.loading;\n    const number = props.amount;\n    const name = props.currency;\n    const companiesKeys = Object.keys(info);\n    const companiesValues = Object.values(info);\n\n    if (spinner === 2) {\n        return (<div className=\"loader\"></div>)\n    }\n    else {\n        return (\n\n            <div className=\"ciaContainer\">\n\n                <div className=\"ciaContainer_keys\">\n                    {companiesKeys.map(companyKey => {\n                        return (\n                            <div>\n                                <p>{companyKey}</p>\n                                <hr />\n                            </div>\n                        )\n                    })}\n                </div>\n\n                <div className=\"ciaContainer_values\">\n                    {companiesValues.map(companyValue => {\n\n                        if (name === \"BTC\") {\n                            if (companyValue == Math.max(...companiesValues)) {\n                                return (\n\n                                    <div className=\"paint\">\n                                        <p>{companyValue * number}</p>\n                                        <hr />\n                                    </div>\n                                )\n                            }\n                            else {\n                                return (\n                                    <div>\n                                        <p>{companyValue * number}</p>\n                                        <hr />\n                                    </div>\n                                )\n                            }\n                        } else {\n\n                            if (companyValue == Math.min(...companiesValues)) {\n                                return (\n                                    <div>\n                                        <p className=\"paint\">{(number * number) / companyValue}</p>\n                                        <hr />\n                                    </div>\n                                )\n                            } else {\n                                return (\n                                    <div>\n                                        <p>{(number * number) / companyValue}</p>\n                                        <hr />\n                                    </div>\n                                )\n                            }\n                        }\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Companies;","import React from 'react';\nimport '../stylesheets/App.css';\nimport Form from './Form';\nimport Companies from './Companies';\n\nclass App extends React.Component {\n  state = {\n    companies: [],\n    amount: 1,\n    currency: \"BTC\",\n    loading: 1\n  }\n\n  getData = (ev) => {\n    ev.preventDefault();\n    const amount = ev.target.elements[0];\n    const currency = ev.target.elements[1];\n    console.log(currency);\n    this.setState({\n      loading: 2\n    })\n    fetch(\"https://compare.monedero.com/api/getPrice\")\n      .then(response => {\n        return (response.json());\n      })\n      .then(response => {\n        console.log(this.state.amount);\n        this.setState({\n          companies: response,\n          amount: amount.value,\n          currency: currency.value,\n          loading: 3\n        })\n      })\n\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <header className=\"header\">\n          <h1 className=\"header-h1\">Conversor</h1>\n        </header>\n        <Form getData={this.getData} />\n        <Companies companies={this.state.companies} loading={this.state.loading} amount={this.state.amount} currency={this.state.currency} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}